//Proporcionado por la plataforma de Blynk
//Estas lineas tienen que ser SIEMPRE las primeras
#define BLYNK_TEMPLATE_ID "TMPL5Hczr7GZk"
#define BLYNK_TEMPLATE_NAME "ESP32 ARMARIO CULTIVO"
#define BLYNK_AUTH_TOKEN "nunBXZcBClp6_ABsFDkQPuW4HhrrhW74"

#include "esp_camera.h"
#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>

//Credenciales de la red wifi
#define NETWORK "Abcdefg"
#define PASSWORD "gatitosperritos123"

// Select camera model
#define CAMERA_MODEL_AI_THINKER // Has PSRAM
#include "camera_pins.h"

//Equivalencia de pines
#define PHOTO V8
#define LED 4

//Variables Dirección IP
String local_IP;

unsigned long ultimaFoto = 0;
unsigned long intervaloFoto = 25000;


void startCameraServer();

void takePhoto()
{
  digitalWrite(LED, HIGH);
  delay(200);
  uint32_t randomNum = random(50000);
  Serial.println("http://"+local_IP+"/capture?_cb="+ (String)randomNum);
  Blynk.setProperty(PHOTO, "urls", "http://"+local_IP+"/capture?_cb="+(String)randomNum);
  digitalWrite(LED, LOW);
  delay(1000);
}

void setup() {
  Serial.begin(115200);
  pinMode(LED,OUTPUT);  //Configuración LED-FLASH ESP32
  Serial.println();
  
  //-----CONFIGURACIÓN CÁMARA-----------------------------------
  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer = LEDC_TIMER_0;
  config.pin_d0 = Y2_GPIO_NUM;
  config.pin_d1 = Y3_GPIO_NUM;
  config.pin_d2 = Y4_GPIO_NUM;
  config.pin_d3 = Y5_GPIO_NUM;
  config.pin_d4 = Y6_GPIO_NUM;
  config.pin_d5 = Y7_GPIO_NUM;
  config.pin_d6 = Y8_GPIO_NUM;
  config.pin_d7 = Y9_GPIO_NUM;
  config.pin_xclk = XCLK_GPIO_NUM;
  config.pin_pclk = PCLK_GPIO_NUM;
  config.pin_vsync = VSYNC_GPIO_NUM;
  config.pin_href = HREF_GPIO_NUM;
  config.pin_sscb_sda = SIOD_GPIO_NUM;
  config.pin_sscb_scl = SIOC_GPIO_NUM;
  config.pin_pwdn = PWDN_GPIO_NUM;
  config.pin_reset = RESET_GPIO_NUM;
  config.xclk_freq_hz = 20000000;
  config.pixel_format = PIXFORMAT_JPEG;

  if(psramFound()){
    config.frame_size = FRAMESIZE_UXGA;
    config.jpeg_quality = 10;
    config.fb_count = 2;
  } else {
    config.frame_size = FRAMESIZE_SVGA;
    config.jpeg_quality = 12;
    config.fb_count = 1;
  }

  esp_err_t err = esp_camera_init(&config);
  if (err != ESP_OK) {
    Serial.printf("Camera init failed with error 0x%x", err);
    delay(1000);
    ESP.restart();
  }


  //------------------------------------------------------------
  
  //-----CONFIGURACIÓN WIFI-------------------------------------
  WiFi.mode(WIFI_STA);

  Serial.println("");
  Serial.print("Connecting to ");
  Serial.println(NETWORK);

  WiFi.begin(NETWORK, PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }

  Serial.println("");
  Serial.println("WiFi connected");

  Serial.println("");
  local_IP = WiFi.localIP().toString();
  Serial.println("STAIP address: ");
  Serial.println(local_IP);
  Serial.println("");

  //------------------------------------------------------------

  Blynk.begin(BLYNK_AUTH_TOKEN, NETWORK, PASSWORD);  //INICIALIZACIÓN BLYNK
  startCameraServer();
}

BLYNK_WRITE(PHOTO){
  int buttonState = param.asInt(); // Lee el estado del botón (0: OFF, 1: ON)
  if (buttonState == 1) {
    Serial.println("Capture Photo");
    takePhoto();
  }  
}

void loop() {
  Blynk.run();
  if((millis() - ultimaFoto)>intervaloFoto){
    Serial.println("Capture Photo");
    takePhoto();
    ultimaFoto = millis();
  }
}
