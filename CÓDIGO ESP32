//Proporcionado por la plataforma de Blynk
//Estas lineas tienen que ser SIEMPRE las primeras
#define BLYNK_TEMPLATE_ID "TMPL5x8cM-Wi8"
#define BLYNK_TEMPLATE_NAME "PRUEBA CONEXION ESP32"
#define BLYNK_AUTH_TOKEN "---"

//Bibliotecas necesarias
#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>

//Credenciales de la red wifi
#define NETWORK "Abcdefg"
#define PASSWORD "---"

//Variables para que funcione el programa de ejemplo
float Tactual1=10;
float Hactual1=80;
float Tactual2=15;
float Hactual2=83;
float Tactual=(Tactual1+Tactual2)/2;
float Hactual=(Hactual1+Hactual2)/2;
float Tdeseada;
float Hdeseada;
float TdeseadaRemota;
float HdeseadaRemota;

//Variables necesarias
String inputString = "";
bool stringComplete = false;


void setup() {
  Serial.begin(115200);
  Blynk.begin(BLYNK_AUTH_TOKEN, NETWORK, PASSWORD);
}

//Función para avisar que se reciben datos por el Serial
void serialEvent() {
  while (Serial1.available()) {          //.available()=true si hay datos en el buffer de recepción
    char inChar = (char)Serial1.read();  //lee el primer caracter en el buffer y lo guarda en char
    inputString += inChar;               //almacena cada caracter en un string
    if (inChar == '-') stringComplete = true;  //'-' = char que indica fin de cadena en el buffer
  }   //se pasa al siguiente elemento del buffer y se vuelve a evaluar el while
}

void LecturaDatosArduino(){
  seialEvent();
  delay(1);
  if(stringComplete){
    int pos1 = inputString.indexOf('_');
    Tactual = inputString.substring(0, pos1).toFloat();

    int pos2 = inputString.indexOf('_', pos1 + 1);
    Hactual = inputString.substring(pos1 + 1, pos2).toFloat();

    int pos3 = inputString.indexOf('_', pos2 + 1);
    Tactual1 = inputString.substring(pos2 + 1, pos3).toFloat();

    int pos4 = inputString.indexOf('_', pos3 + 1);
    Hactual1 = inputString.substring(pos3 + 1, pos4).toFloat();

    int pos5 = inputString.indexOf('_', pos4 + 1);
    Tactual2 = inputString.substring(pos4 + 1, pos5).toFloat();

    int pos6 = inputString.indexOf('_', pos5 + 1);
    Hactual2 = inputString.substring(pos5 + 1, pos6).toFloat();

    int pos7 = inputString.indexOf('_', pos6 + 1);
    Tdeseada = inputString.substring(pos6 + 1, pos7).toFloat();

    Hdeseada = inputString.substring(pos7 + 1, inputString.length() - 1).toFloat();

    inputString = "";
    stringComplete = false;
  }
}

void EnvioDatosBlynk(){
  // Envía los datos a los Datastreams de Blynk
  Blynk.virtualWrite(V0, Tactual1);       // Envía Tactual1 a Virtual Pin V0
  Blynk.virtualWrite(V1, Hactual1);       // Envía Hactual1 a Virtual Pin V1
  Blynk.virtualWrite(V2, Tactual2);       // Envía Tactual2 a Virtual Pin V2
  Blynk.virtualWrite(V3, Hactual2);       // Envía Hactual2 a Virtual Pin V3
  Blynk.virtualWrite(V4, Tactual);        // Envía Tactual a Virtual Pin V4
  Blynk.virtualWrite(V5, Hactual);        // Envía Hactual a Virtual Pin V5
  Blynk.virtualWrite(V6, Tdeseada);       // Envía Tdeseada a Virtual Pin V6
  Blynk.virtualWrite(V7, Hdeseada);       // Envía Hdeseada a Virtual Pin V7

  delay(1000); // Ajusta el tiempo para controlar la frecuencia de envío
}

void loop() {
  LecturaDatosArduino();
  Blynk.run();
  EnvioDatosBlynk();
}
